variables:
  - group: myst-pipeline
  - name: SCRIPTS_ROOT
    value: $(Build.SourcesDirectory)/.azure_pipelines/scripts

# nightly pipeline will be triggered in pipeline schedule settings.

trigger: none
pr: none

jobs:
- job: BuildAndTest
  displayName: 'Building and Testing'
  # nightly pipeline will have 300 min timeout, approx. time used:
  # 10m build
  # 15m basic/unit tests
  # 1-4h solution tests(based on which are enabled)
  timeoutInMinutes: 300
  pool: '1804DC4CCagentpool'
  workspace:
    clean: all

  steps:
    # perform cleanup before starting pipeline
    - script: |
        sudo rm -rf /tmp/myst*
      displayName: 'cleanup tmpfiles'
    # install minimum required package to run pipeline
    - script: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt-get update
        sudo apt-get install build-essential python3-setuptools python3-pip llvm-7 libmbedtls-dev docker-ce -y 
        sudo chmod 666 /var/run/docker.sock
      displayName: 'minimum init config'

    # build all source files
    - script: |
        make -j
      displayName: 'build repo source'
      workingDirectory: $(Build.SourcesDirectory)
      env:
        MYST_NIGHTLY_TEST: 1

    # run all tests
    - script: |
        make tests ALLTESTS=1 VERBOSE=1
      displayName: 'run all tests'
      continueOnError: true
      enabled: true
      workingDirectory: $(Build.SourcesDirectory)
      env:
        MYST_NIGHTLY_TEST: 1

    # run sql solution test on Canada Central DB Node
    - script: |
        make clean -C $(Build.SourcesDirectory)/solutions/sql_ae
        make -C $(Build.SourcesDirectory)/solutions/sql_ae 
        make run -C $(Build.SourcesDirectory)/solutions/sql_ae
      displayName: 'run sql solution on Canada Central Node'
      continueOnError: true
      enabled: true
      workingDirectory: $(Build.SourcesDirectory)
      env:
        DB_NAME: $(DB_NAME_CANADACENTRAL)
        DB_SERVER_NAME: $(DB_SERVER_NAME_CANADACENTRAL)
        MAA_URL: $(DB_MAA_URL_CANADACENTRAL)

    # run solution tests
    - script: |
        make tests -C $(Build.SourcesDirectory)/solutions
      displayName: 'run solution tests'
      continueOnError: true
      enabled: true
      workingDirectory: $(Build.SourcesDirectory)
      env:
        # by default sql solution test will run on US EAST DB Node
        DB_NAME: $(DB_NAME_USEAST)
        DB_SERVER_NAME: $(DB_SERVER_NAME_USEAST)
        MAA_URL: $(DB_MAA_URL_USEAST)
        RUN_CORECLR_TESTS: 1
    
    # if any previous step(s) not succeed, fail the job
    - script: |
        echo "Not all steps succeed."
        exit 1
      displayName: 'Error(s) Check'
      condition: not(eq(variables['Agent.JobStatus'], 'succeeded'))        
    
