#!/bin/bash

##==============================================================================
##
## sources
##
## Synopsis:
##     Compile a list of sources files (.c, .cpp, and .h) in the git repository.
##     Does not include submodules. Use the --staged option to generate a list
##     of sources staged for commit.
##
## Usage:
##     sources
##
##==============================================================================

staged=0

# process options:
for opt
do

  arg=`expr "x$opt" : 'x[^=]*=\(.*\)'`
  case $opt in

    --staged)
      staged=1
      shift
      ;;

    --*)
      echo "$0: unknown option:  $opt"
      exit 1
      ;;

  esac

done

top=$(git rev-parse --show-toplevel)

cd ${top}

branch=$(git rev-parse --abbrev-ref HEAD)

if [ "${staged}" == "1" ]; then
    # form a list of files that are staged for commit
    files=$(git commit --dry-run --short --untracked-files=no | cut -f3 -d" ")
else
    # form a list of all files in repository
    files=$(git ls-tree -r ${branch} --name-only)
fi

sources=

for i in ${files}
do
    case $i in

        third_party/*)
            # ignore these directories
            ;;

        *.c|*.h|*.cpp)
            sources+="${i} "
            ;;

        *)
            # ignore this file
            ;;
    esac
done

echo ${sources}
